
/* Archivo CSS para Grid por líneas */

*{
    /* margin: 0; */
}
[class^="grid-child"]{
    background-color: coral;
   /*  display: flex;
    justify-content: center; Al estar puesto el style.css, sería redundante volver adarle el mismo valor en el archivo style2.css
    align-items: center; */
}
.grid-parent-2{ /* Aqui marcamos el grid que tendrá el contenedor padre */
    display: grid;
    grid-template-columns: repeat(3, 1fr); /*  3 columnas de 1fr */
    grid-template-rows: repeat(4, 1fr); /* 4 filas de 1fr */
    gap: 10px; /* Separacion entre hijos de 10px */
}
.grid-parent-2 > .grid-child-1{ /* Si no especificamos de esta forma tan directa pueden surgir errores posteriormente */
    grid-column: 1 / 3; /* Aqui le decimos que ocupe desde la linea 1 a la linea 3 */
    grid-row: 1; /* Le decimos que ocupe la fila 1 */   /* Es igual que decirle grid-row: 1 / 2 */
}
.grid-parent-2 > .grid-child-2{
    grid-column: 3 / 4; /* Es igual que ponerle grid-column: 3; */
    grid-row: 1 / 3;
}
.grid-parent-2 > .grid-child-3{
    grid-column: 1 / 3;
    grid-row: 2 / 5;

    opacity: 0.5; /* Damos una opacidad del 0.5 (50%) */
    z-index: -1; /* Dictamos que quede por detras de los demás elementos, ya que esos tienen un valor por defecto de 0 */
}
.grid-parent-2 > .grid-child-4{
    grid-column: 3 / 4; /* Es igual que ponerle grid-column: 3; */
    grid-row: 3;
}
.grid-parent-2 > .grid-child-5{
    grid-column: 2 / 4;
    grid-row: 4;
}
.grid-parent-2 > .grid-child-6{
    grid-column: 1;
    grid-row: 2;
}
